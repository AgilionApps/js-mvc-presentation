## Why Batman

- CoffeeScript is elegant and cuts down on LOC
- For Rails developers (like me) you'll feel right at home
- Convention over configuration design pattern
- Observable properties are awesome

```coffeescript
@emptyEntry.observe 'gravity', (newVal, oldVal) ->
  @set 'abv', @get('calculated_abv')
```

- Built in form binding within views

``` html
<form class="nice" data-formfor-beer="controllers.beers.emptyBeer" data-event-submit="controllers.beers.create">
  <div class="field">
    <input type="text" class="input-text name" placeholder="beer name" data-bind="beer.name" />
  </div>
  <div class="field">
    <input type="submit" class="nice large button" value="Save Beer" />
  </div>
</form>
```

- Views are just pure HTML

```html
<tbody>
  <tr data-foreach-beer="Beer.all">
    <td><a data-route="beer" data-bind="beer.name"></a></td>
    <td><a data-event-click="beer.destroy">Delete</a></td>
  </tr>
</tbody>
```

![Shopify](http://wiki.shopify.com/upload/a/a6/Shopify-2010-black.png)

- Shopify is a pretty well established company, this is their entry into the Javascript MVC world. Hopefully it will have some staying power.
